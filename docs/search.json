[{"fullname": "vlsi", "modulename": "vlsi", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "vlsi.solvers", "modulename": "vlsi.solvers", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "vlsi.solvers.sat", "modulename": "vlsi.solvers.sat", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "vlsi.solvers.sat.at_least_one", "modulename": "vlsi.solvers.sat", "qualname": "at_least_one", "type": "function", "doc": "<p>Calculates constraints for at least one true variable.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bool_vars</strong> (list):\nBoolean variables.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>constraints</strong> (list):\nz3 constraints.</li>\n</ul>\n", "parameters": ["bool_vars"], "funcdef": "def"}, {"fullname": "vlsi.solvers.sat.at_most_one", "modulename": "vlsi.solvers.sat", "qualname": "at_most_one", "type": "function", "doc": "<p>Calculates constraints for at most one true variable.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bool_vars</strong> (list):\nBoolean variables.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>constraints</strong> (list):\nz3 constraints.</li>\n</ul>\n", "parameters": ["bool_vars"], "funcdef": "def"}, {"fullname": "vlsi.solvers.sat.sat", "modulename": "vlsi.solvers.sat", "qualname": "sat", "type": "function", "doc": "<p>Solves a SAT problem.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong> (dict):\nData dictionary.</li>\n<li><strong>timeout</strong> (int):\nTimeout in seconds.</li>\n<li><strong>rotation</strong> (bool):\nFlag for rotation.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>chip_h_int</strong> (int):\nChip height.</li>\n<li><strong>result_x</strong> (int):\nBlocks' horizontal positions.</li>\n<li><strong>result_y</strong> (int):\nBlocks' vertical positions.</li>\n<li><strong>result_inst_x</strong> (int):\nBlocks' widths.</li>\n<li><strong>result_inst_y</strong> (int):\nBlocks' heights.</li>\n<li><strong>computation_time</strong> (float):\nComputation time in seconds.</li>\n</ul>\n", "parameters": ["data", "timeout", "rotation"], "funcdef": "def"}, {"fullname": "vlsi.solvers.smt", "modulename": "vlsi.solvers.smt", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "vlsi.solvers.smt.smt", "modulename": "vlsi.solvers.smt", "qualname": "smt", "type": "function", "doc": "<p>Solves a SMT problem.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong> (dict):\nData dictionary.</li>\n<li><strong>timeout</strong> (int):\nTimeout in seconds.</li>\n<li><strong>rotation</strong> (bool):\nFlag for rotation.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>chip_h_int</strong> (int):\nChip height.</li>\n<li><strong>result_x</strong> (int):\nBlocks' horizontal positions.</li>\n<li><strong>result_y</strong> (int):\nBlocks' vertical positions.</li>\n<li><strong>result_inst_x</strong> (int):\nBlocks' widths.</li>\n<li><strong>result_inst_y</strong> (int):\nBlocks' heights.</li>\n<li><strong>computation_time</strong> (float):\nComputation time in seconds.</li>\n</ul>\n", "parameters": ["data", "timeout", "rotation"], "funcdef": "def"}, {"fullname": "vlsi.utilities", "modulename": "vlsi.utilities", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "vlsi.utilities.plots", "modulename": "vlsi.utilities.plots", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "vlsi.utilities.plots.plot_chip", "modulename": "vlsi.utilities.plots", "qualname": "plot_chip", "type": "function", "doc": "<p>Plots a chip configuration.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (str):\nFile name.</li>\n<li><strong>width</strong> (int):\nChip width.</li>\n<li><strong>height</strong> (int):\nChip height.</li>\n<li><strong>blocks</strong> (tuple):\nList of the blocks to plot.</li>\n<li><strong>min_index</strong> (int):\nIndex of the smallest block.</li>\n</ul>\n", "parameters": ["file", "width", "height", "blocks", "min_index"], "funcdef": "def"}, {"fullname": "vlsi.utilities.plots.plot_times", "modulename": "vlsi.utilities.plots", "qualname": "plot_times", "type": "function", "doc": "<p>Plots the time graph.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>times</strong> (list):\nTimes to plot.</li>\n<li><strong>min_ins</strong> (int):\nMinimum instance to plot.</li>\n<li><strong>max_ins</strong> (int):\nMaximum instance to plot.</li>\n<li><strong>top</strong> (int):\nTime limit.</li>\n<li><strong>normal</strong> (bool):\nFlag to plot normal times.</li>\n<li><strong>rotation</strong> (bool):\nFlag to plot rotation times.</li>\n</ul>\n", "parameters": ["times", "min_ins", "max_ins", "top", "normal", "rotation"], "funcdef": "def"}, {"fullname": "vlsi.utilities.preprocessing", "modulename": "vlsi.utilities.preprocessing", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "vlsi.utilities.preprocessing.compute_max_h", "modulename": "vlsi.utilities.preprocessing", "qualname": "compute_max_h", "type": "function", "doc": "<p>Calculates maximum chip height.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>chip_w</strong> (int):\nChip width.</li>\n<li><strong>inst_x</strong> (list):\nBlocks' widths.</li>\n<li><strong>inst_y</strong> (list):\nBlocks' heights.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>max_h</strong> (int):\nMaximum chip height.</li>\n</ul>\n", "parameters": ["chip_w", "inst_x", "inst_y"], "funcdef": "def"}, {"fullname": "vlsi.utilities.preprocessing.preprocessing", "modulename": "vlsi.utilities.preprocessing", "qualname": "preprocessing", "type": "function", "doc": "<p>Preprocesses the file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (string):\nFile name.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>data</strong> (dict):\nProcessed data.</li>\n</ul>\n", "parameters": ["file"], "funcdef": "def"}, {"fullname": "vlsi.utilities.wrappers", "modulename": "vlsi.utilities.wrappers", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "vlsi.utilities.wrappers.output", "modulename": "vlsi.utilities.wrappers", "qualname": "output", "type": "function", "doc": "<p>Write output.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (str):\nFile name.</li>\n<li><strong>chip_w</strong> (int):\nChip width.</li>\n<li><strong>chip_h</strong> (int):\nChip height.</li>\n<li><strong>n</strong> (int):\nNumber of blocks.</li>\n<li><strong>inst_x</strong> (list):\nBlocks' widths.</li>\n<li><strong>inst_y</strong> (list):\nBlocks' heights.</li>\n<li><strong>bl_x</strong> (list):\nBlocks' horizontal positions.</li>\n<li><strong>bl_y</strong> (list):\nBlocks' vertical positions.</li>\n</ul>\n", "parameters": ["file", "chip_w", "chip_h", "n", "inst_x", "inst_y", "bl_x", "bl_y"], "funcdef": "def"}, {"fullname": "vlsi.utilities.wrappers.cp_wrapper", "modulename": "vlsi.utilities.wrappers", "qualname": "cp_wrapper", "type": "function", "doc": "<p>Calls the CP solver and returns the computation time.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (string):\nFile name.</li>\n<li><strong>data</strong> (dict):\nData dictionary.</li>\n<li><strong>solver</strong> (minizinc.Solver):\nMinizinc solver.</li>\n<li><strong>model</strong> (minizinc.Model):\nMinizinc model.</li>\n<li><strong>timeout</strong> (int):\nTimeout in seconds.</li>\n<li><strong>rotation</strong> (bool):\nFlag for rotation</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>time</strong> (float):\nComputation time in seconds.</li>\n</ul>\n", "parameters": ["file", "data", "solver", "model", "timeout", "rotation"], "funcdef": "def"}, {"fullname": "vlsi.utilities.wrappers.sat_wrapper", "modulename": "vlsi.utilities.wrappers", "qualname": "sat_wrapper", "type": "function", "doc": "<p>Calls the SAT solver and returns the computation time.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (string):\nFile name.</li>\n<li><strong>data</strong> (dict):\nData dictionary.</li>\n<li><strong>timeout</strong> (int):\nTimeout in seconds.</li>\n<li><strong>rotation</strong> (bool):\nFlag for rotation</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>time</strong> (float):\nComputation time in seconds.</li>\n</ul>\n", "parameters": ["file", "data", "timeout", "rotation"], "funcdef": "def"}, {"fullname": "vlsi.utilities.wrappers.smt_wrapper", "modulename": "vlsi.utilities.wrappers", "qualname": "smt_wrapper", "type": "function", "doc": "<p>Calls the SMT solver and returns the computation time.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (string):\nFile name.</li>\n<li><strong>data</strong> (dict):\nData dictionary.</li>\n<li><strong>timeout</strong> (int):\nTimeout in seconds.</li>\n<li><strong>rotation</strong> (bool):\nFlag for rotation</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>time</strong> (float):\nComputation time in seconds.</li>\n</ul>\n", "parameters": ["file", "data", "timeout", "rotation"], "funcdef": "def"}]